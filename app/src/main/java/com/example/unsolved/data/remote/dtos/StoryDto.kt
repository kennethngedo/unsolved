package com.example.unsolved.data.remote.dtos

import com.example.unsolved.data.local.entities.StoryEntity

data class StoryDto(
    val age_from: Int,
    val age_to: Int,
    val created: String,
    val duration: String,
    val full_summary: String,
    val genre_id: Int,
    val intro_video_sequence: Int,
    val is_coming_soon: Boolean,
    val is_early_access: Boolean,
    val is_featured: Boolean,
    val is_in_testing: Boolean,
    val is_published: Boolean,
    val language_id: Int,
    val main_character_id: Int,
    val name: String,
    val passcode_clue: String?,
    val passcode_value: String?,
    val price: Int,
    val release_date: String?,
    val release_timezone: String?,
    val short_summary: String,
    val publication_status: String,
    val story_end_sequence: Int,
    val story_id: Int,
    val story_start_sequence: Int,
    val updated: String,
    val list_image: List<MediaDto>,
    val preview_media: List<MediaDto>,
    val intro_video: List<MediaDto>,
    val background_image: List<MediaDto>,
    val characters: List<CharacterDto>,
) {
    fun toStoryEntity(): StoryEntity {
        return StoryEntity(
            duration = duration,
            full_summary = full_summary,
            intro_video = intro_video.map { it.toMediaEntity() },
            main_character_id = main_character_id,
            name = name,
            price = price,
            short_summary = short_summary,
            story_id = story_id,
            list_image = list_image.map { it.toMediaEntity() },
            preview_media = preview_media.map { it.toMediaEntity() },
            characters = characters.map { it.toCharacterEntity() },
            age_from = age_from,
            age_to = age_to,
            updated = updated,
            story_end_sequence = story_end_sequence,
            language_id = language_id,
            is_in_testing = is_in_testing,
            background_image = background_image.map { it.toMediaEntity() },
            created = created,
            genre_id = genre_id,
            story_start_sequence = story_start_sequence,
            intro_video_sequence = intro_video_sequence,
            is_coming_soon = is_coming_soon,
            is_early_access = is_early_access,
            is_featured = is_featured,
            is_published = is_published,
            passcode_clue = passcode_clue,
            passcode_value = passcode_value,
            publication_status = publication_status,
            release_date = release_date,
            release_timezone = release_timezone
        )
    }
}

